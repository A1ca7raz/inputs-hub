name: "Build package"

on:
  workflow_dispatch:
    inputs:
      package:
        description: Package to build
        required: false
        type: string
      push_cache:
        description: Push cache
        required: true
        default: true
        type: boolean
      pre_check:
        description: Check evaluation
        required: true
        default: true
        type: boolean
  workflow_call:
    inputs:
      package:
        description: Package to build
        required: false
        type: string
      push_cache:
        description: Push cache
        default: true
        type: boolean
      pre_check:
        description: Check evaluation
        required: true
        default: false
        type: boolean

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      CI_MODE: 1
      CACHIX_CACHE: ${{ secrets.CACHIX_CACHE }}
      CACHIX_ACCESS_TOKEN: ${{ secrets.CACHIX_ACCESS_TOKEN }}

    steps:
    - name: 0-1. Maximize space
      run: |
        sudo rm -rf /usr/share/dotnet
        sudo rm -rf /usr/local/lib/android
        sudo rm -rf /opt/ghc
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        echo "Available space:"
        df -h

    - name: 0-2. Checkout repository
      uses: actions/checkout@v4
      with:
        ref: 'main'

    - name: 0-3. Install nix
      uses: cachix/install-nix-action@V27
      with:
        nix_path: nixpkgs=channel:nixos-unstable
        extra_nix_config: |
          experimental-features = nix-command flakes repl-flake
          access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
          substituters = https://cache.nixos.org/ https://cache.garnix.io
          trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= cache.garnix.io:CTFPyKSLcx5RMJKfLo5EEPUObbA78b0YQ2DTCJXqr9g=

    - name: 0.4. Setup Magic Nix cache
      uses: DeterminateSystems/magic-nix-cache-action@v9

    - name: 0-5. Setup Cachix
      uses: cachix/cachix-action@v14
      with:
        name: '${{ secrets.CACHIX_CACHE }}'
        authToken: '${{ secrets.CACHIX_ACCESS_TOKEN }}'
        skipPush: true

    - name: 1-1. Show flake metadata
      if: ${{ inputs.pre_check == true }}
      run: nix flake metadata

    - name: 1-2. Show flake information
      if: ${{ inputs.pre_check == true }}
      run: nix flake show

    - name: 1-3. Check evaluation
      if: ${{ inputs.pre_check == true }}
      run: nix flake check --no-build --no-allow-import-from-derivation

    - name: 2-1. Build Nix packages bundles
      if: ${{ inputs.packages != 0 }}
      run: |
        nix build .#packages.x86_64-linux.${{ inputs.packages }} -v --show-trace

    - name: 2-2. Build entire nurpkgs
      if: ${{ inputs.packages == 0 }}
      run: |
        nix flake check --no-allow-import-from-derivation -v --show-trace

    - name: 3-1. Push cache to Cachix
      if: ${{ inputs.push_cache == true }}
      run: bash ./.github/push_cache.sh ${{ inputs.packages }}
